_interrupt:
    di
    load sr3 (in_port)
    cmp sr3 line_feed
    jne _continue
    load sr2 flag
    inc sr2
    store sr2 flag
    _continue:
        store sr3 (buffer_pointer)
        load sr3 (buffer_pointer)
        inc sr3
        store sr3 (buffer_pointer)
        load sr3 (buffer_len)
        inc sr3
        store sr3 (buffer_len)
        returning:
            iret

message:
    .word 'What is your name?\'
message_pointer:
    .word message
greeting:
    .word 'Hello, \'
greeting_pointer:
    .word _greeting
exclamation:
    .word 1, 33
exclamation_pointer:
    .word exclamation
cycles:
    .word 0
in_port:
    .word 98
out_port:
    .word 99
flag:
    .word 0
line_feed:
    .word 10
tmp:
    .word 0
buffer_len:
    .word 0
buffer_pointer:
    .word buffer
buffer_start_pointer:
    .word buffer
buffer:
    .word 0

_start:
    load sr1 (message)
    store sr1 (cycles)
    _message_loop:
        load message_pointer
        inc
        store message_pointer
        load (message_pointer)
        out out_port
        load cycles
        dec
        store cycles
        jnz message_loop
    ei
    spin_loop:
        load flag
        jz spin_loop
    di
    load greeting
    store cycles
    _greeting_loop:
        load greeting_pointer
        inc
        store greeting_pointer
        load (greeting_pointer)
        out out_port
        load cycles
        dec
        store cycles
        jnz greeting_loop
    load buffer_len
    dec
    store cycles
    _name_loop:
        load (buffer_start_pointer)
        out out_port
        load buffer_start_pointer
        inc
        store buffer_start_pointer
        load cycles
        dec
        store cycles
        jnz _name_loop
    _exclamation_printing:
        load exclamation_pointer
        inc
        store exclamation_pointer
        load (exclamation_pointer)
        out out_port
    halt