_interrupt:
    di
    load tr1 (in_port)
    load tr3 line_feed
    cmp tr3 tr1
    jne _continue
    load tr2 flag
    inc tr2
    store tr2 flag
    _continue:
        store tr1 (buffer)
        load tr3 buffer
        dec tr3
        store tr3 buffer
        load tr3 buffer_len
        inc tr3
        store tr3 buffer_len
        iret

message:
    .word 'What is your name?\'
message_pointer:
    .word message
null_symb:
    .word '\'
greeting:
    .word 'Hello, \'
greeting_pointer:
    .word greeting
in_port:
    .word 0
out_port:
    .word 1
flag:
    .word 0
line_feed:
    .word 10
buffer:
    .word 99
buffer_len:
    .word 0
cmp_zero:
    .word 0

_start:
    load tr1 message_pointer
    load tr2 null_symb
    _message_loop:
        load tr3 (tr1)
        cmp tr3 tr2
        je _end_ml
        load tr3 (tr1)
        store tr3 (out_port)
        inc tr1
        jmp _message_loop
    _end_ml:
        load tr1 line_feed
        store tr1 (out_port)
        ei
    _spin_loop:
        load tr1 flag
        load tr2 cmp_zero
        cmp tr1 tr2
        je _spin_loop
    di
    load tr1 greeting_pointer
    load tr2 null_symb
    _greeting_loop:
        load tr3 (tr1)
        cmp tr3 tr2
        je _end_gl
        load tr3 (tr1)
        store tr3 (out_port)
        inc tr1
        jmp _greeting_loop
    _end_gl:
        load tr2 buffer_len
        load tr1 buffer
        add tr1 tr2
        store tr1 buffer
    _name_loop:
        load tr3 (buffer)
        store tr3 (out_port)
        load tr1 buffer
        dec tr1
        store tr1 buffer
        load tr1 buffer_len
        dec tr1
        store tr1 buffer_len
        load tr3 cmp_zero
        cmp tr1 tr3
        jne _name_loop
    halt